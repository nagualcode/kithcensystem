services:
  eureka-server:
    build: ./eureka-server
    ports:
      - "8761:8761"
    networks:
      - spring-boot-network

  flyway:
    image: flyway/flyway:9.22.0
    command: -url=jdbc:postgresql://postgres:5432/test_db -schemas=public -user=postgres -password=password -connectRetries=60 migrate
    volumes:
      - ./V1__Create_All_Tables.sql:/flyway/sql/V1__Create_All_Tables.sql
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - spring-boot-network

  userservice:
    build: ./userservice
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/test_db
      SPRING_RABBITMQ_HOST: rabbitmq
    depends_on:
      - eureka-server
      - postgres
      - rabbitmq
      - flyway
    networks:
      - spring-boot-network

  paymentservice:
    build: ./paymentservice
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/test_db
      SPRING_RABBITMQ_HOST: rabbitmq
    depends_on:
      - eureka-server
      - postgres
      - rabbitmq
      - flyway
    networks:
      - spring-boot-network

  kitchenservice:
    build: ./kitchenservice
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/test_db
      SPRING_RABBITMQ_HOST: rabbitmq
    depends_on:
      - eureka-server
      - postgres
      - rabbitmq
      - flyway
    networks:
      - spring-boot-network

  menuservice:
    build: ./menuservice
    ports:
      - "8084:8084"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    depends_on:
      - eureka-server
      - flyway
    networks:
      - spring-boot-network

  orderservice:
    build: ./orderservice
    ports:
      - "8085:8085"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/test_db
      SPRING_RABBITMQ_HOST: rabbitmq
    depends_on:
      - eureka-server
      - postgres
      - rabbitmq
      - flyway
    networks:
      - spring-boot-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - spring-boot-network

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: test_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - spring-boot-network

  userfronted:
    build:
      context: ./userfronted
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    networks:
      - spring-boot-network
      
networks:
  spring-boot-network:
    driver: bridge

volumes:
  postgres-data:
